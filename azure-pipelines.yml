# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '08db54a1-f17f-44a0-a128-bbc0dd370a09'
  imageRepository: 'incomeexpendituretrackerapi'
  containerRegistry: 'testacrtf87.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/src/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
      - pwsh: >
          Set-Content -Path GitVersion.yaml -Value `
            "mode: Mainline",
            "branches:",
            "  master:",
            "    regex: ^master$|^main$",
            "  feature:",
            "    regex: ^feature?[/-]",
            "    tag: ci-{BranchName}",
            "  pull-request:",
            "    tag: pr"
        displayName: GitVersion - Write GitVersion.yaml

      - task: gitversion/setup@0
        displayName: Install GitVersion Tool
        inputs:
          versionSpec: '5.x'

      - task: gitversion/execute@0
        displayName: Run GitVersion
        inputs:
          useConfigFile: true
          configFilePath: GitVersion.yaml

      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: $(imageRepository)
          dockerfile: $(dockerfilePath)
          containerRegistry: $(dockerRegistryServiceConnection)
          tags: |
            $(GitVersion.FullSemVer)

- stage: Provision
  displayName: Provision Azure Resources
  jobs:
  - job: ProvisionAppService
    displayName: Provision App Service
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Visual Studio Professional Subscription(2a5769bc-d052-44b2-a7c6-dd904bd632e9)'
        subscriptionId: '2a5769bc-d052-44b2-a7c6-dd904bd632e9'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'test-rg'
        location: 'North Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/provisioning/appService.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/provisioning/appService.parameters.json'
        deploymentMode: 'Incremental'
  - job: ProvisionCosmosDb
    displayName: Provision Cosmos
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: 'Visual Studio Professional Subscription(2a5769bc-d052-44b2-a7c6-dd904bd632e9)'
        subscriptionId: '2a5769bc-d052-44b2-a7c6-dd904bd632e9'
        action: 'Create Or Update Resource Group'
        resourceGroupName: 'test-rg'
        location: 'North Europe'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/provisioning/cosmosDb.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/provisioning/cosmosDb.parameters.json'
        deploymentMode: 'Incremental'
- stage: Deploy
  displayName: Deploy to AppService
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Visual Studio Professional Subscription(2a5769bc-d052-44b2-a7c6-dd904bd632e9)'
        appType: 'webAppContainer'
        WebAppName: 'test-web-tf87'
        DockerNamespace: 'testacrtf87.azurecr.io'
        DockerRepository: 'incomeexpendituretrackerapi'
        DockerImageTag: $(Build.BuildNumber)
        